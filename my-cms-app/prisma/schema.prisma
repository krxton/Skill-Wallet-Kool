// This is your Prisma schema file,
// learn more about it in the docs: https://pris.lyd/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Datasource: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ provider ‡πÅ‡∏•‡∏∞ url ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =======================================================
// ENTITIES / MODELS
// =======================================================

// 1. ‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á (Parent)
model Parent {
  id           String @id @default(cuid())
  fullName     String
  email        String @unique
  createdAt    DateTime @default(now())
  status       String @default("Active") // "Active", "Inactive"
  
  // --- [NEW FIELD] ‡πÄ‡∏û‡∏¥‡πà‡∏° Field ‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö Wireframe ---
  verification String @default("Unverified") // "Verified", "Unverified"
  // --------------------------------------------------------

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
  children        ParentChild[]
  activities      ActivityRecord[] @relation("ParentRecords")
  rewards         ParentReward[]
  redeemedRewards RewardRedemption[]
}

// 2. ‡πÄ‡∏î‡πá‡∏Å (Child)
model Child {
  id              String @id @default(cuid())
  fullName        String
  dob             DateTime?
  score           Int @default(0)
  scoreUpdate     Int @default(0)

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
  parents         ParentChild[]
  activities      ActivityRecord[] @relation("ChildRecords")
  redeemedRewards RewardRedemption[]
}

// 3. ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (Activity)
model Activity {
  id            String @id @default(cuid())
  name          String
  category      String
  content       String
  difficulty    String
  maxScore      Int
  description   String?
  videoUrl      String?
  segments      Json?

  // üÜï ‡πÄ‡∏û‡∏¥‡πà‡∏° createdAt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
  activities     ActivityRecord[] @relation("ActivityRecords")
}

// 4. ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• (Reward)
model Reward {
  id              String @id @default(cuid())
  name            String
  cost            Int
  
  parents         ParentReward[]
  redeemedRewards RewardRedemption[]
}

// =======================================================
// JUNCTION TABLES (‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á)
// =======================================================

// 5. ‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏î‡πá‡∏Å (ParentChild)
model ParentChild {
  parentId     String
  childId      String
  relationship String

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
  parent       Parent @relation(fields: [parentId], references: [id])
  child        Child  @relation(fields: [childId], references: [id])

  @@id([parentId, childId])
}

// 6. ‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• (ParentReward)
model ParentReward {
  parentId String
  rewardId String

  parent   Parent @relation(fields: [parentId], references: [id])
  reward   Reward @relation(fields: [rewardId], references: [id])

  @@id([parentId, rewardId])
}

// 7. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (ActivityRecord / Submissions)
model ActivityRecord {
  id                 String   @id @default(cuid())
  activityId         String
  parentId           String
  childId            String
  
  dateCompleted      DateTime @default(now())
  timeSpentSeconds   Int?     // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ) - OPTIONAL
  status             String   @default("Pending") // Pending, Approved, Failed
  detailResults      Json?    // ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÇ‡∏î‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á Quest (JSON Object)
  scoreEarned        Int      // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
  roundNumber        Int      // ‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
  activity           Activity @relation("ActivityRecords", fields: [activityId], references: [id])
  parent             Parent   @relation("ParentRecords", fields: [parentId], references: [id])
  child              Child    @relation("ChildRecords", fields: [childId], references: [id])
}

// 8. ‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• (RewardRedemption)
model RewardRedemption {
  id           String @id @default(cuid())
  childId      String
  parentId     String
  rewardId     String
  
  dateRedeemed DateTime
  scoreUsed    Int

  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå 
  child        Child @relation(fields: [childId], references: [id])
  parent       Parent @relation(fields: [parentId], references: [id])
  reward       Reward @relation(fields: [rewardId], references: [id])
}