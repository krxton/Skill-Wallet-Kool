// lib/providers/user_provider.dart

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart'; // import ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á ChangeNotifier

class UserProvider with ChangeNotifier {
  // 1. ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (Private Fields)
  String? _currentParentId;
  String? _currentChildId;

  // üÜï Hardcode ID ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô Constructor
  UserProvider() {
    // ‚ö†Ô∏è HARDCODED TEST IDs (‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
    _currentParentId = 'PR2';
    _currentChildId = 'CH2';
  }

  // 2. Getters
  String? get currentParentId => _currentParentId;
  String? get currentChildId => _currentChildId;
  bool get isAuthenticated => _currentParentId != null;

  // 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ (‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Login/Register ‡∏à‡∏£‡∏¥‡∏á)
  void setParentAndChild(String parentId, String childId) {
    _currentParentId = parentId;
    _currentChildId = childId;
    notifyListeners();
  }

  // 4. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô (Placeholder)
  Future<void> updateChildScore(String childId) async {
    // ... logic ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
  }
}
